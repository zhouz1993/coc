<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<!-- 扫描指定包类上的注解 -->
	<context:component-scan base-package="com.wis" />

	<mvc:default-servlet-handler />

	<!-- 配置spring MVC 注解扫描 -->
	<mvc:annotation-driven />

	<!-- 读取jdbc配置文件信息 -->
	<util:properties id="jdbc" location="classpath:jdbc.properties" />

	<!--连接数据库 -->
	<!-- 数据源1 -->  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="#{jdbc.driver}" />
		<property name="url" value="#{jdbc.url}" />
		<property name="username" value="#{jdbc.username}" />
		<property name="password" value="#{jdbc.password}" />
		
        <!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="150"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="5"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="20"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="30"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/>  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        
	</bean>


	<!-- MyBatis -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入连接信息 -->
		<property name="dataSource" ref="dataSource">
		</property>
		<!-- 注入sql定义文件信息 -->
		<property name="mapperLocations" value="classpath:com/wis/sql/*.xml">
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包下所有接口,生成实现对象 -->
		<property name="basePackage" value="com.wis.DAO">
		</property>
		<!-- 注入SqlSessionFactory,可以省略 -->
		<property name="sqlSessionFactory" ref="ssf">
		</property>
	</bean>
	<!-- MyBatis -->
	
	
	<!-- 事务配置(XML) -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource">
		</property>
	</bean>
	<!-- 指定txManager作用在哪些组件及其方法上 -->
	<tx:advice id="empptxAdvice" transaction-manager="txManager">
		<!-- 指定作用在哪些方法,参考目标组件及方法 -->
		<tx:attributes>
			<!-- 查询操作用只读事务 -->
			<tx:method name="findAll" read-only="true" />
			<!-- 其他操作用可读可写事务 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 指定txManager作用在哪些组件上 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="targetPoint" expression="within(com.wis.service..*)" />
		<aop:advisor advice-ref="empptxAdvice" pointcut-ref="targetPoint" />
	</aop:config>
	
	
	<!-- 视图解析器  对转向页面的路径请求： prefix 前缀，suffix 后缀-->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- aop -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

 	<!-- 定时器开关-->
	<task:annotation-driven/>
	
	<!-- 定时器 
	<task:scheduled-tasks>
		<task:scheduled ref="myTaskImpl" method="myTest" cron="0/5 * * * * ?"/>   
	</task:scheduled-tasks>
	 -->  
	
	<!-- 
	<context:annotation-config/>  
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
    <context:component-scan base-package="com.test"/> 
	 -->
	 
	 <!-- 多部分文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="104857600" />
	     <property name="maxInMemorySize" value="4096" />
	     <property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	 
</beans>




